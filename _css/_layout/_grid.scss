// --------------------------------------------------
// Bootstrap Grid
// --------------------------------------------------
// TABLE OF CONTENTS
// - Container
// - Row
// - Column

// Fluid grid
//
// Utilizes the mixin meant for fixed width grid, but without any defined
// width for fluid, full width layouts.
.grid {
  @include clearfix();
  margin-right: auto;
  margin-left: auto;
}

// Container widths
//
// Set the grid width, and override it for fixed navbars in media queries.
.grid-fixed {
  @extend .grid;

  @media (min-width: map-get($grid-breakpoints, sm)) {
    width: map-get($grid-max-widths, sm);
  }

  @media (min-width: map-get($grid-breakpoints, md)) {
    width: map-get($grid-max-widths, md);
  }

  @media (min-width: map-get($grid-breakpoints, lg)) {
    width: map-get($grid-max-widths, lg);
  }

  @media (min-width: map-get($grid-breakpoints, xl)) {
    width: map-get($grid-max-widths, xl);
  }
}

// Row
//
// Rows contain and clear the floats of your columns.
.row {
  @include clearfix();
  margin-left: ceil(($grid-gutter-width / -2));
  margin-right: floor(($grid-gutter-width / -2));
}

// Column
@for $i from 1 through $grid-columns {
  .col-#{$i}, .col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i} {
    position: relative;
    min-height: 1px; // prevent cols from collapsing when empty
    padding-left:  ceil(($grid-gutter-width / 2)); // inner gutter via padding
    padding-right: floor(($grid-gutter-width / 2)); // inner gutter via padding
    width: 100%;
    float: left;
  }

  .col-#{$i}, .col-xs-#{$i} {
    max-width: percentage(($i / $grid-columns));
  }
}

@media (min-width: map-get($grid-breakpoints, sm)) {
  @for $i from 1 through $grid-columns {
    .col-sm-#{$i} {
        max-width: percentage(($i / $grid-columns));
    }
  }
}

@media (min-width: map-get($grid-breakpoints, md)) {
  @for $i from 1 through $grid-columns {
    .col-md-#{$i} {
        max-width: percentage(($i / $grid-columns));
    }
  }
}

@media (min-width: map-get($grid-breakpoints, lg)) {
  @for $i from 1 through $grid-columns {
    .col-lg-#{$i} {
        max-width: percentage(($i / $grid-columns));
    }
  }
}

.row-black {
  &::after {
    content: '';
  }
}
